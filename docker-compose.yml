version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: case_search_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: case_search_db
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./deploy/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - case_search_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: case_search_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: mysql+pymysql://${DB_USER}:${DB_PASSWORD}@db:3306/case_search_db
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      CORS_ORIGINS: https://${DOMAIN_NAME},http://localhost:3000
      REACT_APP_GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      DEBUG: "False"
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - case_search_network
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: case_search_frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: https://${DOMAIN_NAME}
      REACT_APP_GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - case_search_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: case_search_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf
      - ./deploy/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - case_search_network

volumes:
  db_data:

networks:
  case_search_network:
    driver: bridge
